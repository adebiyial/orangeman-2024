---
import urlMetadata from "url-metadata";
import Card from "../components/Card.astro";
import Hyperlink from "../components/Hyperlink.astro";
import PageHeader from "../components/PageHeader.astro";
import PageNav from "../components/PageNav.astro";
import Root from "../layouts/Root.astro";

const urls = [
  "https://www.theseptum.com/topics/fiction/leaving-home",
  "https://www.theseptum.com/topics/culture/the-elevator-of-death",
  "https://www.theseptum.com/topics/cultural-comment/the-perils-of-a-potential-fork-in-the-road",
  "https://www.theseptum.com/topics/history/my-game-boy-advance-was-the-perfect-tragedy-for-a-healthy-life",
  "https://www.theseptum.com/topics/history/hindsight-and-the-many-nights-of-resurrection",
  "https://www.theseptum.com/topics/essay/i-can-never-fall-asleep-when-it-matters",
];

async function fetchArticles() {
  try {
    const metadata = (url: string) =>
      urlMetadata(url, {
        mode: "cors",
        includeResponseBody: false,
      });
    const resArray = await Promise.all(urls.map((url) => metadata(url)));

    const articles: Array<Record<string, string>> = resArray.map((res) => ({
      title: String(res["og:title"] || res.title),
      description: String(res["og:description"] || res.description),
      imageUrl: String(res["og:image"]),
      url: String(res["og:url"] || res["canonical"] || res["url"]),
    }));

    return articles;
  } catch (error) {
    throw Error("Something went wrong...");
  }
}

const articles = await fetchArticles();
const title = "Creative writing";
---

<Root title={title}>
  <div data-grid data-grid-col="2" data-layout-center>
    <PageNav />
    <PageHeader heading={title} subheading={`# ${articles.length}`} />

    <ul data-grid data-list>
      {
        articles.map((item) => (
          <li data-list-item>
            <Hyperlink href={item.url} nounderline target="_blank">
              <Card
                title={item.title}
                subtitle={item.description}
                imageUrl={item.imageUrl}
              />
            </Hyperlink>
          </li>
        ))
      }
    </ul>
  </div>
</Root>

<style>
  [data-layout-center] {
    column-gap: var(--gap-4x);
    --content-width: 1fr;
  }

  [data-list] {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--gap-3x) var(--gap-2x);
  }
</style>
